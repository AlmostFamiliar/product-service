{"openapi":"3.0.1","info":{"title":"Product Service API","description":"This service manages products in categories and offers the necessary CRUD operationsproducts in categories and offers the necessary CRUD operations.\n\nCurrencies get converted against the fixer.io api.\n","version":"v0.0.1"},"servers":[{"url":"http://localhost","description":"Generated server url"}],"paths":{"/v1/product":{"put":{"tags":["product"],"summary":"Update product","description":"Updates a product","operationId":"updateProduct","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateProductRequest"}}},"required":true},"responses":{"409":{"description":"An other product already has the same name. Has to be unique.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation"},"400":{"description":"Invalid request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Category could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}},"post":{"tags":["product"],"summary":"Create product","description":"Creates a new product","operationId":"createProduct","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateProductRequest"}}},"required":true},"responses":{"409":{"description":"An other product already has the same name. Has to be unique.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation"},"400":{"description":"Invalid request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Category could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v1/category":{"put":{"tags":["category"],"summary":"Update Category","description":"Updates a category. If the parent node gets changed all of the underlying categories will belong to that new parent category. \n All the rules that apply when creating a new node, apply here aswell","operationId":"updateCategory","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UpdateCategoryRequest"}}},"required":true},"responses":{"404":{"description":"Parent could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation"},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"- Any of the parent categories has the same name as the category to be created.\n- Any of the child categories of the immediate parent already have the same name.\n- Another root category already has the same name.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}},"post":{"tags":["category"],"summary":"Create category","description":"Creates a new sub categorie, if the parentId is specified and a new root categorie otherwise.","operationId":"createCategory","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCategoryRequest"}}},"required":true},"responses":{"404":{"description":"Parent could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation"},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"409":{"description":"- Any of the parent categories has the same name as the category to be created.\n- Any of the child categories of the immediate parent already have the same name.\n- Another root category already has the same name.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v1/products":{"get":{"tags":["product"],"summary":"Get products by category","description":"Gets all products and of a category and all products of its subcatgories","operationId":"getProductsByCategory","parameters":[{"name":"categoryId","in":"query","description":"Id of the category","required":true,"schema":{"type":"integer","format":"int64"},"example":10},{"name":"currency","in":"query","description":"Currency that the products should be returned in.","required":false,"schema":{"type":"string"},"example":"USD"}],"responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/ProductResponse"}}}}},"400":{"description":"Invalid request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Category could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v1/product/{id}":{"get":{"tags":["product"],"summary":"Get product by ID","description":"Returns a single product","operationId":"getProduct","parameters":[{"name":"id","in":"path","description":"Id of the product","required":true,"schema":{"type":"integer","format":"int64"},"example":10},{"name":"currency","in":"query","description":"Currency that the product should be returned in.","required":false,"schema":{"type":"string"},"example":"USD"}],"responses":{"404":{"description":"Product could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ProductResponse"}}}}}},"delete":{"tags":["product"],"summary":"Delete product","description":"Updates a product","operationId":"deleteProduct","parameters":[{"name":"id","in":"path","description":"Id of the product","required":true,"schema":{"type":"integer","format":"int64"},"example":10}],"responses":{"404":{"description":"Product could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation"},"400":{"description":"Invalid request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v1/category/{id}":{"get":{"tags":["category"],"summary":"Find category by ID","description":"Returns a single category","operationId":"getCategory","parameters":[{"name":"id","in":"path","description":"Id of the category","required":true,"schema":{"minimum":0,"type":"integer","format":"int64"},"example":10}],"responses":{"400":{"description":"Invalid Parameter","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CategoryResponse"}}}},"404":{"description":"Category does not exist","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}},"delete":{"tags":["category"],"summary":"Delete category by ID","description":"Deletes a category by ID. A category can only be deleted, if it has no products or categories, that reference it.","operationId":"deleteCategory","parameters":[{"name":"id","in":"path","description":"Id of the category","required":true,"schema":{"type":"integer","format":"int64"},"example":10}],"responses":{"409":{"description":"There are still products or subcategories pointing at this category.\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"200":{"description":"successful operation"},"400":{"description":"Invalid parameters","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}},"404":{"description":"Category could not be found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"}}}}}}},"/v1/categories":{"get":{"tags":["category"],"summary":"Find all categories","description":"Returns all categories in a tree structure. The first level contains only the root categories, which contain all the other categories in their children.","operationId":"getAllCategories","responses":{"200":{"description":"successful operation","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CategoryResponse"}}}}}}}}},"components":{"schemas":{"UpdateProductRequest":{"required":["categories","currency","description","id","name","price"],"type":"object","properties":{"id":{"minimum":0,"type":"integer","description":"ID of the product","format":"int64","example":10},"name":{"type":"string","description":"Name of the product","example":"Jacket"},"description":{"type":"string","description":"Description of the product","example":"Very warm"},"price":{"minimum":0.00,"exclusiveMinimum":true,"type":"number","description":"Price of the product","example":1.99},"currency":{"type":"string","description":"Currency of the price. If no value is provided euro will be assumed. If a value is provided the price will be coverted to euro and saved in the database.","example":"USD"},"categories":{"type":"array","items":{"type":"integer","format":"int64"}}}},"ErrorResponse":{"required":["error","message","path","status","timestamp"],"type":"object","properties":{"timestamp":{"type":"string","description":"Timestamp in ISO-Format","example":"2021-05-02T00:31:20.884820"},"status":{"type":"integer","description":"HTTP Status","format":"int32","example":404},"error":{"type":"string","description":"Error that was thrown","example":"CategoryDoesNotExistExc"},"message":{"type":"string","description":"Descriptive error message","example":"Category with id '3' does not exist!"},"path":{"type":"string","description":"request path that was called","example":"/v1/category/3"}}},"UpdateCategoryRequest":{"required":["id","name"],"type":"object","properties":{"id":{"minimum":0,"type":"integer","description":"ID of the category","format":"int64","example":10},"name":{"type":"string","description":"Name of the category","example":"Clothes"},"parentId":{"type":"integer","description":"ID of the parent category","format":"int64","example":5}}},"CreateProductRequest":{"required":["categories","currency","description","name","price"],"type":"object","properties":{"name":{"type":"string","description":"Name of the product","example":"Jacket"},"description":{"type":"string","description":"Description of the product","example":"Very warm"},"price":{"minimum":0.00,"exclusiveMinimum":true,"type":"number","description":"Price of the product","example":1.99},"currency":{"type":"string","description":"Currency of the price. If no value is provided euro will be assumed. If a value is provided the price will be coverted to euro and saved in the database.","example":"USD"},"categories":{"type":"array","items":{"type":"integer","format":"int64"}}}},"CreateCategoryRequest":{"required":["name"],"type":"object","properties":{"name":{"type":"string","description":"Name of the category to be created","example":"Electronics"},"parentId":{"type":"integer","description":"ID of the parent category. If not provided a root category will be created.","format":"int64","example":10}}},"CategoryResponse":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"children":{"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/CategoryResponse"}}}},"MoneyResponse":{"type":"object","properties":{"amount":{"type":"number"},"currency":{"type":"string"}}},"ProductResponse":{"type":"object","properties":{"id":{"type":"integer"},"name":{"type":"string"},"description":{"type":"string"},"price":{"$ref":"#/components/schemas/MoneyResponse"},"categories":{"type":"array","items":{"$ref":"#/components/schemas/CategoryResponse"}}}}}}}